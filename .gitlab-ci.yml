image: 'node:14.16.1-alpine3.13'

stages:
  - lint
  - sentry-job
  - sonarqube-check
  - version
  - security

lint:
  stage: lint
  only:
    - merge_requests
    - master
  except:
    - lokalize
    - /^lokalise-.*$/
  script:
    - npm ci
    - npm run lint:typecheck
    - npm run lint:eslint

build:
  stage: lint
  only:
    - master
  script:
    - npm ci
    - npm run build:production
  artifacts:
    paths:
      - build/

sentry-job:
  stage: sentry-job
  image: getsentry/sentry-cli
  only:
    - master
  script:
    - echo "Create a new release $CI_COMMIT_SHA"
    - export SENTRY_AUTH_TOKEN=$SENTRY_BASE_TOKEN
    - export SENTRY_ORG=$SENTRY_BASE_ORGANIZATION
    - export SENTRY_PROJECT=$SENTRY_BASE_PROJECT
    - sentry-cli releases new $CI_COMMIT_SHA
    - sentry-cli releases files $CI_COMMIT_SHA upload-sourcemaps $CI_PROJECT_DIR/build -x .js -x .map --validate --verbose --rewrite --strip-common-prefix
    - sentry-cli releases finalize $CI_COMMIT_SHA
    - echo "Finalized release for $CI_COMMIT_SHA"

security-scan:
  stage: security
  image: 'node:alpine'
  when: manual
  allow_failure: true
  script:
    - apk update && apk add jq curl
    - VERSION=`jq -r '.version' package.json`
    - npm install -g @cyclonedx/bom
    - npm install
    - cyclonedx-bom
    - 'curl -X "POST" "https://shield-api.ops.mati.io/api/v1/bom" -H "Content-Type: multipart/form-data" -H "X-Api-Key: ${SECURITY_SCAN_API}" -F "autoCreate=true" -F "projectName=${CI_PROJECT_NAME}" -F "projectVersion=${VERSION}" -F "bom=@bom.xml"'

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey="${CI_PROJECT_NAME}" -Dsonar.sources=src -Dsonar.exclusions=src/**/*.d.ts,src/assets,src/**/*.svg
  allow_failure: true
  only:
    - merge_requests
    - master

version:
  stage: version
  only:
    - release_stage
  before_script:
    - apk update && apk add git
    - PROJECT_URL=$(echo $CI_PROJECT_URL | sed -E 's/http(s)?:\/\///')
    - git remote set-url origin https://oauth2:$CI_BOT_TOKEN@$PROJECT_URL.git
    - git config --global user.email "$CI_BOT_EMAIL"
    - git config --global user.name "$CI_BOT_NAME"
  script:
    - npm version patch
    - git push origin HEAD:$CI_COMMIT_REF_NAME --tags --porcelain -o ci.skip
